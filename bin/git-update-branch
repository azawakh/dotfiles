#!/usr/bin/env bash

set -euo pipefail

function usage_exit() {
  cat <<EOF
Usage: git update-branch [<options>]

  -r <remote>    which remote fetch from(default <remote> is origin)

Description:

  After you execute this command, current branch is updated.

  Actually, this command is the alias for 'git fetch <remote> <branch_name> && git reset --hard <remote>/<branch_name>'.

Exception:

  As these cases, update-branch doesn't do anything except put it back into the working tree from the staging.

  * There are diffs in your working tree
  * There are changes in your staging
  * There ahead commits in your branch

EOF
 exit 0
}

branch_name=`git symbolic-ref --short HEAD`
remote='origin'

while getopts :r:h OPT
do
  case $OPT in
    r)      remote=$OPTARG;;
    h|:|\?) usage_exit;;
  esac
done

git add -N .

if [ `git diff --name-only` ]; then
  echo "There are some diff on working tree, so all diffs are added and reset. Plz commit or stash them."
  git reset
  exit 1
else
  if [ `git diff --cached --name-only` ]; then
    echo "There are changes on staging, so they are reset. Plz commit or stash them."
    git reset
    exit 1
  else
    if [ $(git rev-list --count $remote/$branch_name..HEAD) -gt 0 ]; then
        echo "There are some diff compared with $remote/$branch_name, plz push or rebase."
        exit 1
    else
        git fetch $remote $branch_name
        git reset --hard $remote/$branch_name
    fi
  fi
fi
